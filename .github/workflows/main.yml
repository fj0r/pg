name: postgres 18

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_run:
    workflows: [ pg_rx ]
    branches: [ main, pg_rx ]
    types:
      - completed
  workflow_dispatch:
    inputs: {}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: fj0r/pg


jobs:
  build:

    runs-on: ubuntu-latest
    if: ${{ !endsWith(github.event.head_commit.message, '~') }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: fj0r
          password: ${{ secrets.GHCR_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            src:
              - '18.Dockerfile'
            gis:
              - 'gis.Dockerfile'

      - name: Build pg 18
        # steps.changes.outputs.src == 'true' ||
        uses: docker/build-push-action@v4
        with:
          file: 18.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:18
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PG_VERSION_MAJOR=18
            BASEIMAGE=ghcr.io/fj0r/pg:18_ext

      - name: Build pg gis
        uses: docker/build-push-action@v4
        with:
          file: gis.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:18gis
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASEIMAGE=ghcr.io/fj0r/pg:18

      - name: Delete untagged ghcr
        uses: Chizkiyahu/delete-untagged-ghcr-action@v3
        with:
          # Personal access token (PAT) used to fetch the repository. The PAT is configured
          # with the local git config, which enables your scripts to run authenticated git
          # commands. The post-job step removes the PAT.
          # needs delete:packages permissions
          # required: true
          # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
          token: ${{ secrets.GHCR_TOKEN }}
          # Repository name or  name with owner
          # Delete only from repository name
          # Default: ${{ github.repository }}
          repository: ${{ github.repository }}
          # 'The repository owner name'
          # Default: ${{ github.repository_owner }}
          repository_owner: ${{ github.repository_owner }}
          # 'The package names'
          # Delete only from comma separated package names
          # required: false
          package_name: ''
          # Delete only package versions without tag
          # required: false
          # Default: true
          # choices: true, false
          untagged_only: true
          # Except untagged multiplatform packages from deletion
          # only for untagged_only=true
          # needs docker installed
          except_untagged_multiplatform: false
          # the owner type
          # required: true
          # choices: org, user
          owner_type: user
